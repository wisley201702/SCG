<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAgAAAAZAAAAHwAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAA
        ACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAHAAA
        AAwAAAAAAAAAAAAAAAAAAAAMAAAARwgICJQKCgqlDAwMpQwMCqUMDAymDAwKpgoKCqYKCgqmCgoKpgoK
        CqYMDAqmCgoKpgwMDKYKCgqmCgoKpgwMCqYKCgqmCgoKpgoKCqYKCgqmDAwMpgwMDKYKCgqlCgoKpQoK
        CqUJCQmdAAAAWwAAABcAAAAAAAAAAQAAADAYGBjQIiIh/yIiIf8iIiH/IiIh/yEhIf8fHx//Hx8e/x0d
        HP8eHh3/Hx8e/x8fHv8fHx7/ICAg/x0dHf8fHx7/Hx8e/x4eHf8dHR3/HR0c/x0dHP8hISD/IiIh/yEh
        IP8gIB//ICAg/yQkI/8bGxrkAAAASgAAAAUAAAADAAAAUSAgIP8gIB//IyMi/yMjI/8gIB//Hh4d/yAg
        H/8qKir/KSkp/ysrK/8sLCz/LS0s/y0tLP8tLS3/Li4u/y0tLf8rKyv/KSkp/ygoJ/8kJCT/IyMi/yQk
        JP8nJyf/ICAf/x8fHv8gIB//JCQj/yIiIf8KCgp6AAAACwAAAAQCAgJWISEg/yUkJP8oJyf/JSUk/x8f
        Hv8cHBz/V1dX/11dXf9aWlr/Z2dn/2lpaf9qamr/aGho/11dXf80NDT/IiIj/yQkJf8kJCX/JCQl/ykp
        Kf8qKir/JiYm/x0dHf8jIyL/Hx8f/ycmJv8mJiX/ISEg/wwMDH4AAAALAAAABAYGBlUhISH/Ghoa/x0d
        Hf8kJCT/Hh4d/y4uLv9iYmL/PDw8/1xcXP97e3v/i4uL/4WFhP+FhYX/a2tr/y85R/8bRYH/Fj97/xQ9
        eP8WPHT/IS9H/zMzM/84ODj/ICAg/x8fHv8fHx//HBwc/x4eHv8gIB//Dg4OfgAAAAsAAAADBgYGVCIi
        Iv8hISH/JCQk/yUlJP8dHR3/NjY2/2lpaf9ycnL/ZmZm/4+Pj/94eHj/iIiI/5WVlf96enr/MUBU/xU6
        cf8RNGv/Ejpz/xA3cP8fLUf/Ojo6/zY2Nv8jIyP/Hh4e/yAgH/8lJST/Jycn/x8fHv8ODg59AAAACwAA
        AAMGBgZTIyMi/yMjI/8lJST/JiYm/x0dHf89PTz/k5OT/6enp/+zs7P/p6en/8DAwP+ampr/Z2dn/1xc
        XP8qKy7/NDQ0/zc3Nv8dLkX/Bidb/x0pQP87Ozv/Ozs7/ykpKf8eHh7/ICAg/ycnJv8nJyb/ISEg/wwM
        DHwAAAALAAAAAwYGBlMkJCP/Jycn/ycnJ/8lJST/ICAg/0VERP+qqqr/sbGx/9fX1/+mpqb/w8PD/6ur
        q/89PT3/JSUl/yQkJP86Ojr/dXV1/52en/+Ymp3/nJ2e/4eHh/88PDz/Ly8v/yEgIP8iIiH/Jycn/ygo
        KP8iIiH/DAwMewAAAAsAAAADBgYGUicnJv8rKir/Kiop/yUlJP8hISH/TExL/7+/v//BwcH/vLy8/7S0
        tP+VlZX/JSUl/4qKiv8tLS3/JSUl/0BAQP9TU1P/bW1t/3Nzc/9wcHD/WFhY/z8/P/8ZGRn/ICAg/yMj
        I/8nJyb/Kiop/yMjIv8MDAx6AAAACgAAAAMJCQlRJycn/ysrK/8rKyv/JiUl/yIiIv9VVVT/vb29/7m5
        uf/Mzc3/Z2dn/zExMf98fHz/ODc3/5qamf85OTj/KSko/yAgIP8mJib/KSkp/yYmJv8SERH/EhIS/xwc
        G/8nJib/JiYm/ygoJ/8sLCz/JiYl/xAQEHkAAAAKAAAAAwkJCVEqKSn/LCwr/y0tLf8nJyf/JSUl/2Bf
        X//k5OT/09PT/2NjY/8pKCj/WVhU/4+OiP/Cwb//s7Gr/9DPzP/S0c7/ubm3/2tqav8lJSX/Hh4e/xwc
        HP8oJyf/LCsr/ysrKv8pKSn/Kiop/y8vLv8pKSj/EhISeQAAAAoAAAADCQkJUCwsLP8tLS3/LS0t/ykp
        KP8nJib/ZGRk/9zc3P9ra2v/QkE+/317dP+QjYb/mJaQ/6akn//BwL3/zc3M/9zb2//s7Or/9/f2/8rK
        yf84ODj/KSko/yIiIv8YGBj/Kikp/ysrKv8sLCv/MC8v/ysqKv8XFRV4AAAACgAAAAMMDAxPLSws/y8u
        Lv8tLSz/Kysq/ycmJv9PT07/bW1t/0hHQ/9+fHT/hYJ7/4OAef+MioP/n52Y/7e2sv/S0c7/4ODf/9XU
        0v/6+vn//v7+/+Xl5P87Ozr/LSws/ykoKP8tLSz/LCsr/y8uLv8uLi7/LS0t/xcXF3cAAAAKAAAAAw0N
        DU4uLS3/MTEw/y4uLv8uLi3/KSkp/yMiIf86OTf/fnx0/4F+dv92c2v/e3hw/4qIgf+enJb/uLay/9jX
        1P/u7u3/8vLy/+bl5P///////v7+/87Ozf8oKCj/KSkp/y0tLf8tLSz/MDAv/y4uLv8xMTD/FxcXdgAA
        AAoAAAADEBAQTi8vLv81NDT/MTAw/y8vLv8rKyr/ICAf/3Nxa/+HhX3/endv/3Vyav96d2//f311/5OR
        i/+vran/2djW//T08//8/Pz//v7+//7+/v/9/f3/+/r6/3Fxcf8rKir/LSws/y8uLv8xMTD/Ly4u/zMz
        Mv8XFxd1AAAACQAAAAMTExBNMTEw/zY1Nf8xMTH/Li4t/ycnJv87Ojj/kY+I/4uJgv9/fHT/e3hw/3Jv
        Z/9vbGX/cG9t/5WUlP/Pz8//5OTk//39/f/9/f3//Pz8//r6+v/39vb/xMPC/ycmJv8tLS3/MDAv/zMz
        Mv8xMDD/ODc3/xoYGHQAAAAJAAAAAxQUFEwzMzL/NTQ0/zQzM/8wLy//JCQj/2BfXP+enJf/lZOM/42K
        g/+Fg3z/eHVt/2RjYf9iYmL/hISE/97e3v/8/Pz/5OTk//b29f/09PP/8fDv/+3s6//h4d//MTEx/y0t
        LP8zMjL/ODc2/zY1Nf86OTn/HBwccwAAAAkAAAADFxcXSzY2Nf83Njb/NjU1/zEwMP8jIyL/eXh0/6yr
        pf+lo57/oZ+Z/5qYkv+KiIP/hISE/3Jycv9qamr/qamp/9TU1P/Nzc3/4uHf/+Hg3//f3tz/3NvZ/9bV
        0/9EREP/MDAv/zQzM/86OTn/OTg4/zs7Ov8cHBxzAAAACQAAAAMXFxdLOTg4/zo5OP83Njb/MzIx/yIh
        If+GhYH/vLu3/7i3s/+5uLP/ubiz/7Kxrf+4uLj/y8vL/0hISP9bW1v/i4uL/5qamf++vLj/xMK+/8XD
        wP/HxcL/xcTA/0RDQv8wMDD/NjU1/z8+Pv88Ozv/Pj09/x8fH3IAAAAJAAAAAxgYGEk8Ozv/PDs7/zo5
        Of82NTX/IiEh/4B/ff/Ozcn/zs3K/9PSz//Z2db/4N/d/+fn5//p6en/zs7O/3t7e/9lZWX/fn16/5mX
        kf+lo57/qqij/7Gwq/+ysKv/ODc2/zAvL/86OTj/QD8//0A/Pv8+PT3/IiIicAAAAAgAAAACGBgYSUA/
        Pv9APz//Pz4+/zs6Of8lJCT/YWBe/9vb2P/h4N7/5ubk/+/v7v/39/b/8vLy/+vr6/+4uLj/hoaG/3Rz
        cf99enL/g4B5/46Mhf+Vkoz/oZ+a/5mXkv8jIiL/NDMz/zw7Ov9APz7/Q0JB/0FAP/8iHx9wAAAACAAA
        AAIYGBhIQ0JC/0RCQv9BQED/Pj08/zIxMf8rKin/2tnY/+7u7f/z8/P/+vr5//39/f/+/v3/9/f2/+Hh
        4P/Dwr//oJ6Z/4eEff9/fHX/fnt0/4iGf/+Ukoz/aWdj/yEhIf85ODj/QUBA/0A+Pv9EQ0L/Q0JB/yIi
        Im8AAAAIAAAAAhkZGUdFREP/RURE/0ZERP9CQUD/Ozo5/yAgH/+Mi4n/9fX1//v7+v/+/v7//v7+//39
        /f/4+Pj/6+vq/9HRzf+xsKv/mJaP/4KAeP96d2//hYN8/4SBe/8xMS//Li4t/z49PP9HR0X/QU4//0dQ
        RP9EREP/JSUibgAAAAgAAAACHR0dRkhHR/9GRET/SUhH/0VERP8/Pj7/JiYm/y0tLf/Pzs3//f39//7+
        /v/+/v7//f39//r6+v/v7+7/2djW/7u5tf+dm5X/i4mB/4iGf/+Afnb/U1JO/x4dHf88Ozv/Q0JC/0lO
        R/9NnED/TX5F/0dIRf8jIyNtAAAACAAAAAIdHR1FS0lJ/0hHRv9LSUn/R0ZF/0NCQf80NDT/QkJC/zw8
        O//X1tX//f39//39/f/8/Pz/+fn4/+7u7f/a2df/vr25/6imoP+amJL/ioeA/2FfW/8cHBv/NzU1/0NC
        Qf9GRUX/S0xJ/05jSv9LXEj/SEhH/yUlJWwAAAAIAAAAAh0dHUVMS0r/T01N/1BPTv9HRkX/QkFB/zo6
        Of9XV1f/QkJC/zY2Nf+qqqn/9PTz//j4+P/09PP/6ejn/9fW0//Bv7v/qaij/5ORi/9VVFH/Gxsb/zQz
        M/9EQ0L/SEZG/0pJSP9KSUn/Tk1M/05NTP9MSkr/KCgobAAAAAgAAAACIyMfQU1MTP87Ojr/ODc3/0hH
        Rv9FREP/Pz8//2BgYP9jY2P/YWFh/zs7O/9PT07/lJST/8DAv//MzMr/vLu5/5aVkv9jYmD/Jycm/yIi
        If89PDv/RkVE/0tKSf9LSUn/TEtK/0pJSP83Njb/PDs6/01MTP8sKSloAAAABgAAAAAmJh8oUE5O/kxK
        Sv9IR0f/SklI/0lISP8rKir/LCsr/y4uLf8tLS3/Kiop/yoqKf8cHBz/GRgY/xgYF/8ZGBj/HBwb/yko
        KP88Ozv/R0ZG/0lISP9NTEv/T01N/05NTP9NS0v/TEpK/0xKSv9MSkr/T05N/zU1MkwAAAACAAAAAAAA
        AANPTU2OVVNT/lNSUf9QTk7/T05O/05MTP9MS0v/SklI/0hGRv9FRET/SUhI/0pJSP9KSUn/SEdH/0hH
        R/9JR0f/T05O/1FPT/9SUVH/UVBQ/1NRUf9TUlL/VFNS/1JQUP9QT07/VVRU/1RTU/5QTk6sAAAACAAA
        AAAAAAAAAAAAAAAAAAE9MzMZPDw8Jjw8PCY8PDwmOTk5KDc3Nyk3NzcpNjY2KjYwMCo2NjYqNjY2KjY2
        Nio2NjYqNzc3KTk5OShBOjonPDw8Jjw8PCY8PDwmQzw8Jjw8PCZDPDwmPDw8Jjw8PCZDQ0MmOzs7HgAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAwAAAA4AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIAAAACAAAABwAAAA/////8=
</value>
  </data>
</root>